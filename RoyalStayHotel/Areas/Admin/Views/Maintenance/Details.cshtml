@model RoyalStayHotel.Models.MaintenanceRequest
@using RoyalStayHotel.Models

@{
    ViewData["Title"] = "Maintenance Details";
    Layout = "_AdminLayout";
    
    var statusClass = Model.Status switch
    {
        MaintenanceRequestStatus.Reported => "bg-secondary",
        MaintenanceRequestStatus.Scheduled => "bg-primary",
        MaintenanceRequestStatus.InProgress => "bg-warning",
        MaintenanceRequestStatus.Completed => "bg-success",
        MaintenanceRequestStatus.OnHold => "bg-info",
        _ => "bg-danger"
    };
    
    var priorityClass = Model.Priority switch
    {
        1 => "bg-danger",
        2 => "bg-warning",
        3 => "bg-info",
        _ => "bg-secondary"
    };
    
    var priorityText = Model.Priority switch
    {
        1 => "Critical",
        2 => "High",
        3 => "Medium",
        _ => "Low"
    };
}

<div class="container-fluid">
    <div class="row mb-3">
        <div class="col-md-12">
            <a asp-action="Index" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left me-1"></i> Back to List
            </a>
            @if (Model.Status != MaintenanceRequestStatus.Completed && Model.Status != MaintenanceRequestStatus.Cancelled)
            {
                <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-primary">
                    <i class="fas fa-edit me-1"></i> Edit
                </a>
            }
            <div class="float-end">
                <button onclick="window.print()" class="btn btn-outline-dark">
                    <i class="fas fa-print me-1"></i> Print
                </button>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-8">
            <div class="card shadow mb-4">
                <div class="card-header py-3 d-flex justify-content-between align-items-center">
                    <h6 class="m-0 font-weight-bold text-primary">Maintenance Task #MT-@Model.Id.ToString("D4")</h6>
                    <span class="badge @statusClass">@Model.Status</span>
                </div>
                <div class="card-body">
                    <div class="row mb-3">
                        <div class="col-md-4 font-weight-bold">Title</div>
                        <div class="col-md-8">@Model.Title</div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-4 font-weight-bold">Description</div>
                        <div class="col-md-8">@Model.Description</div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-4 font-weight-bold">Room</div>
                        <div class="col-md-8">@(Model.Room?.RoomNumber ?? "N/A")</div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-4 font-weight-bold">Issue Type</div>
                        <div class="col-md-8">@Model.IssueType</div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-4 font-weight-bold">Priority</div>
                        <div class="col-md-8"><span class="badge @priorityClass">@priorityText</span></div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-4 font-weight-bold">Reported By</div>
                        <div class="col-md-8">@(Model.ReportedBy?.FullName ?? "System")</div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-4 font-weight-bold">Reported On</div>
                        <div class="col-md-8">@Model.ReportedAt.ToString("MMMM dd, yyyy hh:mm tt")</div>
                    </div>
                    
                    @if (!string.IsNullOrEmpty(Model.Notes))
                    {
                        <div class="row mb-3">
                            <div class="col-md-4 font-weight-bold">Additional Notes</div>
                            <div class="col-md-8">@Model.Notes</div>
                        </div>
                    }
                </div>
            </div>
        </div>
        
        <div class="col-md-4">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Assignment Details</h6>
                </div>
                <div class="card-body">
                    <div class="row mb-3">
                        <div class="col-6 font-weight-bold">Assigned To</div>
                        <div class="col-6">@(Model.AssignedTechnician?.FullName ?? "Not Assigned")</div>
                    </div>
                    
                    @if (Model.ScheduledFor.HasValue)
                    {
                        <div class="row mb-3">
                            <div class="col-6 font-weight-bold">Scheduled For</div>
                            <div class="col-6">@Model.ScheduledFor.Value.ToString("MMM dd, yyyy hh:mm tt")</div>
                        </div>
                    }
                    
                    @if (Model.Status == MaintenanceRequestStatus.Completed)
                    {
                        <div class="row mb-3">
                            <div class="col-6 font-weight-bold">Completed On</div>
                            <div class="col-6">@(Model.CompletedAt?.ToString("MMM dd, yyyy hh:mm tt") ?? "N/A")</div>
                        </div>
                        
                        <div class="row mb-3">
                            <div class="col-6 font-weight-bold">Resolution</div>
                            <div class="col-6">@(Model.Resolution ?? "N/A")</div>
                        </div>
                        
                        <div class="row mb-3">
                            <div class="col-6 font-weight-bold">Cost of Repair</div>
                            <div class="col-6">â‚±@(Model.CostOfRepair?.ToString("N2") ?? "0.00")</div>
                        </div>
                    }
                    
                    @if (Model.Status != MaintenanceRequestStatus.Completed && Model.Status != MaintenanceRequestStatus.Cancelled)
                    {
                        <hr />
                        
                        @if (Model.TechnicianId == null)
                        {
                            <button type="button" class="btn btn-primary w-100 mb-2" data-bs-toggle="modal" data-bs-target="#assignTechnicianModal">
                                <i class="fas fa-user-plus me-1"></i> Assign Technician
                            </button>
                        }
                        
                        <div class="btn-group w-100 mb-2">
                            <button type="button" class="btn btn-@(Model.Status == MaintenanceRequestStatus.InProgress ? "info" : "warning")" 
                                    onclick="updateStatus(@Model.Id, '@(Model.Status == MaintenanceRequestStatus.InProgress ? 
                                    MaintenanceRequestStatus.Scheduled : MaintenanceRequestStatus.InProgress)')">
                                <i class="fas fa-@(Model.Status == MaintenanceRequestStatus.InProgress ? "pause" : "play") me-1"></i>
                                @(Model.Status == MaintenanceRequestStatus.InProgress ? "Pause Work" : "Start Work")
                            </button>
                        </div>
                        
                        <button type="button" class="btn btn-success w-100" data-bs-toggle="modal" data-bs-target="#completeModal">
                            <i class="fas fa-check-circle me-1"></i> Mark as Completed
                        </button>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Assign Technician Modal -->
<div class="modal fade" id="assignTechnicianModal" tabindex="-1" aria-labelledby="assignTechnicianModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="assignTechnicianModalLabel">Assign Technician</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="AssignTechnician" asp-route-id="@Model.Id" method="post">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="technicianId" class="form-label">Select Technician</label>
                        <select id="technicianId" name="technicianId" class="form-select" required>
                            <option value="">-- Select Technician --</option>
                            @foreach (var item in ViewBag.Technicians)
                            {
                                <option value="@item.Value">@item.Text</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Assign</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Complete Modal -->
<div class="modal fade" id="completeModal" tabindex="-1" aria-labelledby="completeModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="completeModalLabel">Mark Maintenance as Complete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="MarkComplete" asp-route-id="@Model.Id" method="post">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="resolution" class="form-label">Resolution Details</label>
                        <textarea id="resolution" name="resolution" class="form-control" rows="3" required></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="costOfRepair" class="form-label">Cost of Repair (â‚±)</label>
                        <input type="number" id="costOfRepair" name="costOfRepair" class="form-control" step="0.01" min="0" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-success">Complete</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function updateStatus(id, status) {
            if (confirm(`Are you sure you want to change the status to ${status}?`)) {
                var form = document.createElement("form");
                form.method = "post";
                form.action = "@Url.Action("UpdateStatus", "Maintenance", new { area = "Admin" })";
                
                // Add id to form
                var idInput = document.createElement("input");
                idInput.type = "hidden";
                idInput.name = "id";
                idInput.value = id;
                form.appendChild(idInput);
                
                // Add status to form
                var statusInput = document.createElement("input");
                statusInput.type = "hidden";
                statusInput.name = "status";
                statusInput.value = status;
                form.appendChild(statusInput);
                
                // Add anti-forgery token
                var token = document.querySelector('input[name="__RequestVerificationToken"]').value;
                var tokenInput = document.createElement("input");
                tokenInput.type = "hidden";
                tokenInput.name = "__RequestVerificationToken";
                tokenInput.value = token;
                form.appendChild(tokenInput);
                
                document.body.appendChild(form);
                form.submit();
            }
        }
    </script>
} 