@model IEnumerable<RoyalStayHotel.Models.RoomTypeInventory>
@{
    ViewBag.Title = "Room Type Management";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="d-sm-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800">Room Type Management</h1>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show mb-4" role="alert">
        <i class="fas fa-check-circle mr-2"></i> @TempData["SuccessMessage"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

<div class="row mb-4">
    <div class="col-md-12">
        <div class="card shadow">
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Room Types & Inventory</h6>
            </div>
            <div class="card-body">
                <p class="mb-4">
                    Manage the total number of rooms for each room type in your hotel inventory. 
                    The available rooms are calculated based on current bookings.
                </p>
                <div class="table-responsive">
                    <table class="table table-bordered table-hover" id="roomTypesTable" width="100%" cellspacing="0">
                        <thead class="bg-light">
                            <tr>
                                <th>Room Type</th>
                                <th>Total Rooms</th>
                                <th>Available</th>
                                <th>Occupied</th>
                                <th>Description</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        <span class="font-weight-bold">@item.RoomType.ToString()</span>
                                    </td>
                                    <td>@item.TotalRooms</td>
                                    <td>
                                        <span class="badge badge-success px-2 py-1">@item.AvailableRooms</span>
                                    </td>
                                    <td>
                                        <span class="badge badge-warning px-2 py-1">@item.OccupiedRooms</span>
                                    </td>
                                    <td>@item.Description</td>
                                    <td>
                                        <a href="@Url.Action("EditRoomType", "Room", new { id = item.Id, area = "Admin" })" class="btn btn-primary btn-sm">
                                            <i class="fas fa-edit"></i> Edit
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Room Type Distribution</h6>
            </div>
            <div class="card-body">
                <div class="chart-bar">
                    <canvas id="roomTypeBarChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        $(document).ready(function() {
            $('#roomTypesTable').DataTable({
                "order": [[ 0, "asc" ]],
                "pageLength": 10
            });
            
            // Room types chart
            var roomTypes = @Html.Raw(Json.Serialize(Model.Select(r => r.RoomType.ToString()).ToArray()));
            var totalRooms = @Html.Raw(Json.Serialize(Model.Select(r => r.TotalRooms).ToArray()));
            var availableRooms = @Html.Raw(Json.Serialize(Model.Select(r => r.AvailableRooms).ToArray()));
            var occupiedRooms = @Html.Raw(Json.Serialize(Model.Select(r => r.OccupiedRooms).ToArray()));
            
            var barCtx = document.getElementById("roomTypeBarChart");
            var barChart = new Chart(barCtx, {
                type: 'bar',
                data: {
                    labels: roomTypes,
                    datasets: [
                        {
                            label: "Total Rooms",
                            backgroundColor: "#4e73df",
                            borderColor: "#4e73df",
                            data: totalRooms,
                        },
                        {
                            label: "Available",
                            backgroundColor: "#1cc88a",
                            borderColor: "#1cc88a",
                            data: availableRooms,
                        },
                        {
                            label: "Occupied",
                            backgroundColor: "#f6c23e",
                            borderColor: "#f6c23e",
                            data: occupiedRooms,
                        }
                    ],
                },
                options: {
                    maintainAspectRatio: false,
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                    }
                }
            });
        });
    </script>
} 