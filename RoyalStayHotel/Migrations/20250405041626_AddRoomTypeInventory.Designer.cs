// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RoyalStayHotel.Data;

#nullable disable

namespace RoyalStayHotel.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250405041626_AddRoomTypeInventory")]
    partial class AddRoomTypeInventory
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RoyalStayHotel.Models.BookedService", b =>
                {
                    b.Property<int>("BookingServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingServiceId"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BookingServiceId");

                    b.HasIndex("BookingId");

                    b.HasIndex("ServiceId");

                    b.ToTable("BookedServices", (string)null);
                });

            modelBuilder.Entity("RoyalStayHotel.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings", (string)null);
                });

            modelBuilder.Entity("RoyalStayHotel.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PaymentId");

                    b.HasIndex("BookingId");

                    b.HasIndex("UserId");

                    b.ToTable("Payments", (string)null);
                });

            modelBuilder.Entity("RoyalStayHotel.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReviewId");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews", (string)null);
                });

            modelBuilder.Entity("RoyalStayHotel.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<int>("AvailabilityStatus")
                        .HasColumnType("int");

                    b.Property<string>("BedType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasDoubleBeds")
                        .HasColumnType("bit");

                    b.Property<bool>("HasKingBed")
                        .HasColumnType("bit");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("MaxGuests")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomType")
                        .HasColumnType("int");

                    b.HasKey("RoomId");

                    b.ToTable("Rooms", (string)null);

                    b.HasData(
                        new
                        {
                            RoomId = 1,
                            AvailabilityStatus = 0,
                            BedType = "King",
                            Capacity = 3,
                            Description = "Experience luxury in our spacious Deluxe Room with modern amenities and elegant design.",
                            HasDoubleBeds = false,
                            HasKingBed = true,
                            Id = 1,
                            ImageUrl = "/images/deluxe_room.png",
                            IsAvailable = true,
                            MaxGuests = 3,
                            Name = "Deluxe",
                            Price = 22628m,
                            PricePerNight = 22628m,
                            RoomNumber = "101",
                            RoomSize = "40 sq m",
                            RoomType = 0
                        },
                        new
                        {
                            RoomId = 2,
                            AvailabilityStatus = 0,
                            BedType = "Double",
                            Capacity = 4,
                            Description = "Upgrade your stay with our Deluxe Suite featuring a separate living area and premium furnishings.",
                            HasDoubleBeds = true,
                            HasKingBed = false,
                            Id = 2,
                            ImageUrl = "/images/deluxe-suite_room.png",
                            IsAvailable = true,
                            MaxGuests = 4,
                            Name = "DeluxeSuite",
                            Price = 33800m,
                            PricePerNight = 33800m,
                            RoomNumber = "201",
                            RoomSize = "60 sq m",
                            RoomType = 1
                        },
                        new
                        {
                            RoomId = 3,
                            AvailabilityStatus = 0,
                            BedType = "King and Double",
                            Capacity = 4,
                            Description = "Our Executive Deluxe Room offers the ultimate luxury experience with panoramic views and exclusive amenities.",
                            HasDoubleBeds = true,
                            HasKingBed = true,
                            Id = 3,
                            ImageUrl = "/images/executive-deluxe_room.png",
                            IsAvailable = true,
                            MaxGuests = 4,
                            Name = "ExecutiveDeluxe",
                            Price = 55500m,
                            PricePerNight = 55500m,
                            RoomNumber = "301",
                            RoomSize = "80 sq m",
                            RoomType = 2
                        });
                });

            modelBuilder.Entity("RoyalStayHotel.Models.RoomTypeInventory", b =>
                {
                    b.Property<int>("RoomTypeInventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomTypeInventoryId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomType")
                        .HasColumnType("int");

                    b.Property<int>("TotalRooms")
                        .HasColumnType("int");

                    b.HasKey("RoomTypeInventoryId");

                    b.ToTable("RoomTypeInventories", (string)null);
                });

            modelBuilder.Entity("RoyalStayHotel.Models.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ServiceId");

                    b.ToTable("Services", (string)null);

                    b.HasData(
                        new
                        {
                            ServiceId = 1,
                            Description = "Luxury transportation from the airport to the hotel",
                            Name = "Airport Transfer",
                            Price = 2500m,
                            ServiceName = "Airport Transfer"
                        },
                        new
                        {
                            ServiceId = 2,
                            Description = "Relaxing full body massage and spa treatment",
                            Name = "Spa Treatment",
                            Price = 3500m,
                            ServiceName = "Spa Treatment"
                        },
                        new
                        {
                            ServiceId = 3,
                            Description = "24/7 in-room dining service",
                            Name = "Room Service",
                            Price = 500m,
                            ServiceName = "Room Service"
                        },
                        new
                        {
                            ServiceId = 4,
                            Description = "Same-day laundry and dry cleaning service",
                            Name = "Laundry Service",
                            Price = 1000m,
                            ServiceName = "Laundry Service"
                        });
                });

            modelBuilder.Entity("RoyalStayHotel.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedAt = new DateTime(2025, 4, 5, 12, 16, 22, 161, DateTimeKind.Local).AddTicks(8012),
                            Email = "admin@royalstay.com",
                            FullName = "Admin User",
                            Id = 1,
                            Password = "Admin123!",
                            Phone = "123-456-7890",
                            PhoneNumber = "123-456-7890",
                            UserType = 1,
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("RoyalStayHotel.Models.BookedService", b =>
                {
                    b.HasOne("RoyalStayHotel.Models.Booking", "Booking")
                        .WithMany("BookedServices")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoyalStayHotel.Models.Service", "Service")
                        .WithMany("BookedServices")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("RoyalStayHotel.Models.Booking", b =>
                {
                    b.HasOne("RoyalStayHotel.Models.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoyalStayHotel.Models.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RoyalStayHotel.Models.Payment", b =>
                {
                    b.HasOne("RoyalStayHotel.Models.Booking", "Booking")
                        .WithMany("Payments")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoyalStayHotel.Models.User", "User")
                        .WithMany("Payments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RoyalStayHotel.Models.Review", b =>
                {
                    b.HasOne("RoyalStayHotel.Models.Room", "Room")
                        .WithMany("Reviews")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoyalStayHotel.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RoyalStayHotel.Models.Booking", b =>
                {
                    b.Navigation("BookedServices");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("RoyalStayHotel.Models.Room", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("RoyalStayHotel.Models.Service", b =>
                {
                    b.Navigation("BookedServices");
                });

            modelBuilder.Entity("RoyalStayHotel.Models.User", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Payments");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
